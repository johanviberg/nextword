/* eslint-disable no-console */
// logger.ts
import winston, { format } from "winston";
import SlackHook from "winston-slack-webhook-transport";

import { showLogger } from "@/constant/env";
import printf = format.printf;
import timestamp = format.timestamp;

const customFormat = printf(({ level, message, timestamp }) => {
  return `${timestamp} - ${level}: ${JSON.stringify(message, null, 2)}`;
});

const logger = winston.createLogger({
  level: "debug",
  format: winston.format.combine(timestamp(), customFormat),
  transports: [
    new winston.transports.Console(),
    new SlackHook({
      webhookUrl: process.env["SLACK_WEBHOOK_URL"] ?? "",
      channel: "#nextword-ops", // optional
      username: "NextwordLogger", // optional
      level: "error", // Send only error level logs to Slack
    }),
  ],
});

export default logger;

/**
 * A logger function that will only logs on development
 * @param object - The object to log
 * @param comment - Autogenerated with `lg` snippet
 */
export function loggerDeprecated(object: unknown, comment?: string): void {
  if (!showLogger) return;

  console.log(
    "%c ============== INFO LOG \n",
    "color: #22D3EE",
    `${typeof window !== "undefined" && window?.location.pathname}\n`,
    `=== ${comment ?? ""}\n`,
    object,
  );
}
